package com.example.e_commerce.controller;

import java.sql.SQLException;

import org.json.JSONArray;
import org.json.JSONException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.e_commerce.entity.Cart;
import com.example.e_commerce.model.CartModel;
import com.example.e_commerce.repository.CartRepository;

@CrossOrigin(origins= {"*"}, maxAge = 4800, allowCredentials = "false" )
@RestController
@RequestMapping("/api/cart")
public class CartController {

	@Autowired
	private CartRepository cartRepository;
	
	CartModel cartModel = new CartModel();
	
//	Retrieve all items inside of the cart
	@GetMapping("/items")
	public ResponseEntity<String> itemsInCart() {
		
//		Create Http headers
	    HttpHeaders responseHeaders = new HttpHeaders();
	    responseHeaders.set("Content-Type", "application/json");
	    responseHeaders.set("Access-Controll-Allow-Origin", "*");
	    responseHeaders.set("Access-Controll-Allow-Methods", "GET, OPTIONS, HEAD, PUT, POST, DELETE");
	    
	    try {
	    	JSONArray result = cartModel.getItems();
	    	
	    	return ResponseEntity.ok()
	    			.headers(responseHeaders)
	    			.body(result.toString());
	    } catch (JSONException | SQLException e) {
	    	return ResponseEntity.internalServerError().headers(responseHeaders).body(null);
	    }
	}
	
//	Delete an selected item from the cart
	@DeleteMapping("/delete/item")
	public ResponseEntity<?> deleteItem(@RequestBody Cart cart) {
		
		try {
			
//			Specifiy the selected item by its id
			cartRepository.deleteById(cart.getId());

			
			return new ResponseEntity<>(HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	
//	Delete all items from the cart
	@DeleteMapping("/delete/all")
	public ResponseEntity<?> deleteAll() {
		try {
			
			cartRepository.deleteAll();
			
			return new ResponseEntity<>(HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
}
